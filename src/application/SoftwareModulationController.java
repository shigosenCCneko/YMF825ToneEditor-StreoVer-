package application;

import DataClass.Ymf825ToneData;
import MyEvent.MyDataEvent;
import MyEvent.Observer;
import MyEvent.eventSource;
import javafx.beans.value.ObservableValue;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.event.EventType;
import javafx.fxml.FXML;
import javafx.scene.Node;
import javafx.scene.Scene;
import javafx.scene.canvas.Canvas;
import javafx.scene.canvas.GraphicsContext;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.Label;
import javafx.scene.control.Slider;
import javafx.stage.Window;

public class SoftwareModulationController implements Observer {
	Ymf825ToneData toneData;

	GraphicsContext g;
	int modulation = 31;
	int sinPitch = 0;
	int sinDepth = 31;
	int modulateRate = 20;
	int midiChannelNo = 0;
	int delayValue = 50;
	int waveNo = 0;


	int sinTbl[][] = {
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0},
			{0,0,0,0,1,1,1,1,2,2,2,2,2,2,2,2,3,2,2,2,2,2,2,2,2,1,1,1,1,0,0,0,0,0,0,0,-1,-1,-1,-1,-2,-2,-2,-2,-2,-2,-2,-2,-3,-2,-2,-2,-2,-2,-2,-2,-2,-1,-1,-1,-1,0,0,0},
			{0,0,0,1,1,1,2,2,2,3,3,3,3,3,3,3,4,3,3,3,3,3,3,3,2,2,2,1,1,1,0,0,0,0,0,-1,-1,-1,-2,-2,-2,-3,-3,-3,-3,-3,-3,-3,-4,-3,-3,-3,-3,-3,-3,-3,-2,-2,-2,-1,-1,-1,0,0},
			{0,0,0,1,1,2,2,3,3,3,4,4,4,4,4,4,5,4,4,4,4,4,4,3,3,3,2,2,1,1,0,0,0,0,0,-1,-1,-2,-2,-3,-3,-3,-4,-4,-4,-4,-4,-4,-5,-4,-4,-4,-4,-4,-4,-3,-3,-3,-2,-2,-1,-1,0,0},
			{0,0,1,1,2,2,3,3,4,4,4,5,5,5,5,5,6,5,5,5,5,5,4,4,4,3,3,2,2,1,1,0,0,0,-1,-1,-2,-2,-3,-3,-4,-4,-4,-5,-5,-5,-5,-5,-6,-5,-5,-5,-5,-5,-4,-4,-4,-3,-3,-2,-2,-1,-1,0},
			{0,0,1,2,2,3,3,4,4,5,5,6,6,6,6,6,7,6,6,6,6,6,5,5,4,4,3,3,2,2,1,0,0,0,-1,-2,-2,-3,-3,-4,-4,-5,-5,-6,-6,-6,-6,-6,-7,-6,-6,-6,-6,-6,-5,-5,-4,-4,-3,-3,-2,-2,-1,0},
			{0,0,1,2,3,3,4,5,5,6,6,7,7,7,7,7,8,7,7,7,7,7,6,6,5,5,4,3,3,2,1,0,0,0,-1,-2,-3,-3,-4,-5,-5,-6,-6,-7,-7,-7,-7,-7,-8,-7,-7,-7,-7,-7,-6,-6,-5,-5,-4,-3,-3,-2,-1,0},
			{0,0,1,2,3,4,5,5,6,6,7,7,8,8,8,8,9,8,8,8,8,7,7,6,6,5,5,4,3,2,1,0,0,0,-1,-2,-3,-4,-5,-5,-6,-6,-7,-7,-8,-8,-8,-8,-9,-8,-8,-8,-8,-7,-7,-6,-6,-5,-5,-4,-3,-2,-1,0},
			{0,0,1,2,3,4,5,6,7,7,8,8,9,9,9,9,10,9,9,9,9,8,8,7,7,6,5,4,3,2,1,0,0,0,-1,-2,-3,-4,-5,-6,-7,-7,-8,-8,-9,-9,-9,-9,-10,-9,-9,-9,-9,-8,-8,-7,-7,-6,-5,-4,-3,-2,-1,0},
			{0,1,2,3,4,5,6,6,7,8,9,9,10,10,10,10,11,10,10,10,10,9,9,8,7,6,6,5,4,3,2,1,0,-1,-2,-3,-4,-5,-6,-6,-7,-8,-9,-9,-10,-10,-10,-10,-11,-10,-10,-10,-10,-9,-9,-8,-7,-6,-6,-5,-4,-3,-2,-1},
			{0,1,2,3,4,5,6,7,8,9,9,10,11,11,11,11,12,11,11,11,11,10,9,9,8,7,6,5,4,3,2,1,0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-9,-10,-11,-11,-11,-11,-12,-11,-11,-11,-11,-10,-9,-9,-8,-7,-6,-5,-4,-3,-2,-1},
			{0,1,2,3,4,6,7,8,9,10,10,11,12,12,12,12,13,12,12,12,12,11,10,10,9,8,7,6,4,3,2,1,0,-1,-2,-3,-4,-6,-7,-8,-9,-10,-10,-11,-12,-12,-12,-12,-13,-12,-12,-12,-12,-11,-10,-10,-9,-8,-7,-6,-4,-3,-2,-1},
			{0,1,2,4,5,6,7,8,9,10,11,12,12,13,13,13,14,13,13,13,12,12,11,10,9,8,7,6,5,4,2,1,0,-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-12,-13,-13,-13,-14,-13,-13,-13,-12,-12,-11,-10,-9,-8,-7,-6,-5,-4,-2,-1},
			{0,1,2,4,5,7,8,9,10,11,12,13,13,14,14,14,15,14,14,14,13,13,12,11,10,9,8,7,5,4,2,1,0,-1,-2,-4,-5,-7,-8,-9,-10,-11,-12,-13,-13,-14,-14,-14,-15,-14,-14,-14,-13,-13,-12,-11,-10,-9,-8,-7,-5,-4,-2,-1},
			{0,1,3,4,6,7,8,10,11,12,13,14,14,15,15,15,16,15,15,15,14,14,13,12,11,10,8,7,6,4,3,1,0,-1,-3,-4,-6,-7,-8,-10,-11,-12,-13,-14,-14,-15,-15,-15,-16,-15,-15,-15,-14,-14,-13,-12,-11,-10,-8,-7,-6,-4,-3,-1},
			{0,1,3,4,6,8,9,10,12,13,14,14,15,16,16,16,17,16,16,16,15,14,14,13,12,10,9,8,6,4,3,1,0,-1,-3,-4,-6,-8,-9,-10,-12,-13,-14,-14,-15,-16,-16,-16,-17,-16,-16,-16,-15,-14,-14,-13,-12,-10,-9,-8,-6,-4,-3,-1},
			{0,1,3,5,6,8,10,11,12,13,14,15,16,17,17,17,18,17,17,17,16,15,14,13,12,11,10,8,6,5,3,1,0,-1,-3,-5,-6,-8,-10,-11,-12,-13,-14,-15,-16,-17,-17,-17,-18,-17,-17,-17,-16,-15,-14,-13,-12,-11,-10,-8,-6,-5,-3,-1},
			{0,1,3,5,7,8,10,12,13,14,15,16,17,18,18,18,19,18,18,18,17,16,15,14,13,12,10,8,7,5,3,1,0,-1,-3,-5,-7,-8,-10,-12,-13,-14,-15,-16,-17,-18,-18,-18,-19,-18,-18,-18,-17,-16,-15,-14,-13,-12,-10,-8,-7,-5,-3,-1},
			{0,1,3,5,7,9,11,12,14,15,16,17,18,19,19,19,20,19,19,19,18,17,16,15,14,12,11,9,7,5,3,1,0,-1,-3,-5,-7,-9,-11,-12,-14,-15,-16,-17,-18,-19,-19,-19,-20,-19,-19,-19,-18,-17,-16,-15,-14,-12,-11,-9,-7,-5,-3,-1},
			{0,2,4,6,8,9,11,13,14,16,17,18,19,20,20,20,21,20,20,20,19,18,17,16,14,13,11,9,8,6,4,2,0,-2,-4,-6,-8,-9,-11,-13,-14,-16,-17,-18,-19,-20,-20,-20,-21,-20,-20,-20,-19,-18,-17,-16,-14,-13,-11,-9,-8,-6,-4,-2},
			{0,2,4,6,8,10,12,13,15,17,18,19,20,21,21,21,22,21,21,21,20,19,18,17,15,13,12,10,8,6,4,2,0,-2,-4,-6,-8,-10,-12,-13,-15,-17,-18,-19,-20,-21,-21,-21,-22,-21,-21,-21,-20,-19,-18,-17,-15,-13,-12,-10,-8,-6,-4,-2},
			{0,2,4,6,8,10,12,14,16,17,19,20,21,22,22,22,23,22,22,22,21,20,19,17,16,14,12,10,8,6,4,2,0,-2,-4,-6,-8,-10,-12,-14,-16,-17,-19,-20,-21,-22,-22,-22,-23,-22,-22,-22,-21,-20,-19,-17,-16,-14,-12,-10,-8,-6,-4,-2},
			{0,2,4,6,9,11,13,15,16,18,19,21,22,22,23,23,24,23,23,22,22,21,19,18,16,15,13,11,9,6,4,2,0,-2,-4,-6,-9,-11,-13,-15,-16,-18,-19,-21,-22,-22,-23,-23,-24,-23,-23,-22,-22,-21,-19,-18,-16,-15,-13,-11,-9,-6,-4,-2},
			{0,2,4,7,9,11,13,15,17,19,20,22,23,23,24,24,25,24,24,23,23,22,20,19,17,15,13,11,9,7,4,2,0,-2,-4,-7,-9,-11,-13,-15,-17,-19,-20,-22,-23,-23,-24,-24,-25,-24,-24,-23,-23,-22,-20,-19,-17,-15,-13,-11,-9,-7,-4,-2},
			{0,2,5,7,9,12,14,16,18,20,21,22,24,24,25,25,26,25,25,24,24,22,21,20,18,16,14,12,9,7,5,2,0,-2,-5,-7,-9,-12,-14,-16,-18,-20,-21,-22,-24,-24,-25,-25,-26,-25,-25,-24,-24,-22,-21,-20,-18,-16,-14,-12,-9,-7,-5,-2},
			{0,2,5,7,10,12,15,17,19,20,22,23,24,25,26,26,27,26,26,25,24,23,22,20,19,17,15,12,10,7,5,2,0,-2,-5,-7,-10,-12,-15,-17,-19,-20,-22,-23,-24,-25,-26,-26,-27,-26,-26,-25,-24,-23,-22,-20,-19,-17,-15,-12,-10,-7,-5,-2},
			{0,2,5,8,10,13,15,17,19,21,23,24,25,26,27,27,28,27,27,26,25,24,23,21,19,17,15,13,10,8,5,2,0,-2,-5,-8,-10,-13,-15,-17,-19,-21,-23,-24,-25,-26,-27,-27,-28,-27,-27,-26,-25,-24,-23,-21,-19,-17,-15,-13,-10,-8,-5,-2},
			{0,2,5,8,11,13,16,18,20,22,24,25,26,27,28,28,29,28,28,27,26,25,24,22,20,18,16,13,11,8,5,2,0,-2,-5,-8,-11,-13,-16,-18,-20,-22,-24,-25,-26,-27,-28,-28,-29,-28,-28,-27,-26,-25,-24,-22,-20,-18,-16,-13,-11,-8,-5,-2},
			{0,2,5,8,11,14,16,19,21,23,24,26,27,28,29,29,30,29,29,28,27,26,24,23,21,19,16,14,11,8,5,2,0,-2,-5,-8,-11,-14,-16,-19,-21,-23,-24,-26,-27,-28,-29,-29,-30,-29,-29,-28,-27,-26,-24,-23,-21,-19,-16,-14,-11,-8,-5,-2},
			{0,3,6,8,11,14,17,19,21,23,25,27,28,29,30,30,31,30,30,29,28,27,25,23,21,19,17,14,11,8,6,3,0,-3,-6,-8,-11,-14,-17,-19,-21,-23,-25,-27,-28,-29,-30,-30,-31,-30,-30,-29,-28,-27,-25,-23,-21,-19,-17,-14,-11,-8,-6,-3}
			};
	int triTbl[][] = {
			   {   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,},
			   {   0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0,  0,  0,  0,},
			   {   0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2,  2,  2,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0, -1, -1, -1, -1, -1, -1, -1, -1, -2, -2, -2, -2, -2, -2, -2, -2, -1, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,},
			   {   0,  0,  0,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2,  3,  3,  3,  3,  3,  2,  2,  2,  2,  2,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0, -1, -1, -1, -1, -1, -2, -2, -2, -2, -2, -2, -3, -3, -3, -3, -3, -2, -2, -2, -2, -2, -1, -1, -1, -1, -1, -1,  0,  0,},
			   {   0,  0,  1,  1,  1,  1,  2,  2,  2,  2,  3,  3,  3,  3,  4,  4,  4,  4,  3,  3,  3,  3,  2,  2,  2,  2,  1,  1,  1,  1,  0,  0,  0,  0, -1, -1, -1, -1, -2, -2, -2, -2, -3, -3, -3, -3, -4, -4, -4, -4, -3, -3, -3, -3, -2, -2, -2, -2, -1, -1, -1, -1,  0,  0,},
			   {   0,  0,  1,  1,  1,  2,  2,  2,  3,  3,  3,  3,  4,  4,  4,  5,  5,  5,  4,  4,  4,  3,  3,  3,  2,  2,  2,  2,  1,  1,  1,  0,  0,  0, -1, -1, -1, -2, -2, -2, -3, -3, -3, -3, -4, -4, -4, -5, -5, -5, -4, -4, -4, -3, -3, -3, -2, -2, -2, -2, -1, -1, -1,  0,},
			   {   0,  0,  1,  1,  2,  2,  2,  3,  3,  3,  4,  4,  5,  5,  5,  6,  6,  6,  5,  5,  4,  4,  4,  3,  3,  3,  2,  2,  1,  1,  1,  0,  0,  0, -1, -1, -2, -2, -2, -3, -3, -3, -4, -4, -5, -5, -5, -6, -6, -6, -5, -5, -4, -4, -4, -3, -3, -3, -2, -2, -1, -1, -1,  0,},
			   {   0,  0,  1,  1,  2,  2,  3,  3,  4,  4,  4,  5,  5,  6,  6,  7,  7,  7,  6,  6,  5,  5,  4,  4,  3,  3,  3,  2,  2,  1,  1,  0,  0,  0, -1, -1, -2, -2, -3, -3, -4, -4, -4, -5, -5, -6, -6, -7, -7, -7, -6, -6, -5, -5, -4, -4, -3, -3, -3, -2, -2, -1, -1,  0,},
			   {   0,  1,  1,  2,  2,  3,  3,  4,  4,  5,  5,  6,  6,  7,  7,  8,  8,  7,  7,  6,  6,  5,  5,  4,  4,  3,  3,  2,  2,  1,  1,  0,  0, -1, -1, -2, -2, -3, -3, -4, -4, -5, -5, -6, -6, -7, -7, -8, -8, -7, -7, -6, -6, -5, -5, -4, -4, -3, -3, -2, -2, -1, -1,  0,},
			   {   0,  1,  1,  2,  2,  3,  3,  4,  5,  5,  6,  6,  7,  7,  8,  8,  9,  8,  8,  7,  7,  6,  6,  5,  4,  4,  3,  3,  2,  2,  1,  1,  0, -1, -1, -2, -2, -3, -3, -4, -5, -5, -6, -6, -7, -7, -8, -8, -9, -8, -8, -7, -7, -6, -6, -5, -4, -4, -3, -3, -2, -2, -1, -1,},
			   {   0,  1,  1,  2,  3,  3,  4,  4,  5,  6,  6,  7,  8,  8,  9,  9, 10,  9,  9,  8,  7,  7,  6,  6,  5,  4,  4,  3,  2,  2,  1,  1,  0, -1, -1, -2, -3, -3, -4, -4, -5, -6, -6, -7, -8, -8, -9, -9,-10, -9, -9, -8, -7, -7, -6, -6, -5, -4, -4, -3, -2, -2, -1, -1,},
			   {   0,  1,  1,  2,  3,  3,  4,  5,  6,  6,  7,  8,  8,  9, 10, 10, 11, 10, 10,  9,  8,  8,  7,  6,  5,  5,  4,  3,  3,  2,  1,  1,  0, -1, -1, -2, -3, -3, -4, -5, -6, -6, -7, -8, -8, -9,-10,-10,-11,-10,-10, -9, -8, -8, -7, -6, -5, -5, -4, -3, -3, -2, -1, -1,},
			   {   0,  1,  2,  2,  3,  4,  5,  5,  6,  7,  8,  8,  9, 10, 11, 11, 12, 11, 10, 10,  9,  8,  7,  7,  6,  5,  4,  4,  3,  2,  1,  1,  0, -1, -2, -2, -3, -4, -5, -5, -6, -7, -8, -8, -9,-10,-11,-11,-12,-11,-10,-10, -9, -8, -7, -7, -6, -5, -4, -4, -3, -2, -1, -1,},
			   {   0,  1,  2,  2,  3,  4,  5,  6,  7,  7,  8,  9, 10, 11, 11, 12, 13, 12, 11, 11, 10,  9,  8,  7,  6,  6,  5,  4,  3,  2,  2,  1,  0, -1, -2, -2, -3, -4, -5, -6, -7, -7, -8, -9,-10,-11,-11,-12,-13,-12,-11,-11,-10, -9, -8, -7, -6, -6, -5, -4, -3, -2, -2, -1,},
			   {   0,  1,  2,  3,  4,  4,  5,  6,  7,  8,  9, 10, 11, 11, 12, 13, 14, 13, 12, 11, 10, 10,  9,  8,  7,  6,  5,  4,  3,  3,  2,  1,  0, -1, -2, -3, -4, -4, -5, -6, -7, -8, -9,-10,-11,-11,-12,-13,-14,-13,-12,-11,-10,-10, -9, -8, -7, -6, -5, -4, -3, -3, -2, -1,},
			   {   0,  1,  2,  3,  4,  5,  6,  7,  8,  8,  9, 10, 11, 12, 13, 14, 15, 14, 13, 12, 11, 10,  9,  8,  7,  7,  6,  5,  4,  3,  2,  1,  0, -1, -2, -3, -4, -5, -6, -7, -8, -8, -9,-10,-11,-12,-13,-14,-15,-14,-13,-12,-11,-10, -9, -8, -7, -7, -6, -5, -4, -3, -2, -1,},
			   {   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 15, 14, 13, 12, 11, 10,  9,  8,  7,  6,  5,  4,  3,  2,  1,  0, -1, -2, -3, -4, -5, -6, -7, -8, -9,-10,-11,-12,-13,-14,-15,-16,-15,-14,-13,-12,-11,-10, -9, -8, -7, -6, -5, -4, -3, -2, -1,},
			   {   0,  1,  2,  3,  4,  5,  6,  7,  9, 10, 11, 12, 13, 14, 15, 16, 17, 16, 15, 14, 13, 12, 11, 10,  8,  7,  6,  5,  4,  3,  2,  1,  0, -1, -2, -3, -4, -5, -6, -7, -9,-10,-11,-12,-13,-14,-15,-16,-17,-16,-15,-14,-13,-12,-11,-10, -8, -7, -6, -5, -4, -3, -2, -1,},
			   {   0,  1,  2,  3,  5,  6,  7,  8,  9, 10, 11, 12, 14, 15, 16, 17, 18, 17, 16, 15, 13, 12, 11, 10,  9,  8,  7,  6,  4,  3,  2,  1,  0, -1, -2, -3, -5, -6, -7, -8, -9,-10,-11,-12,-14,-15,-16,-17,-18,-17,-16,-15,-13,-12,-11,-10, -9, -8, -7, -6, -4, -3, -2, -1,},
			   {   0,  1,  2,  4,  5,  6,  7,  8, 10, 11, 12, 13, 14, 15, 17, 18, 19, 18, 17, 15, 14, 13, 12, 11,  9,  8,  7,  6,  5,  4,  2,  1,  0, -1, -2, -4, -5, -6, -7, -8,-10,-11,-12,-13,-14,-15,-17,-18,-19,-18,-17,-15,-14,-13,-12,-11, -9, -8, -7, -6, -5, -4, -2, -1,},
			   {   0,  1,  3,  4,  5,  6,  8,  9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 19, 17, 16, 15, 14, 12, 11, 10,  9,  7,  6,  5,  4,  2,  1,  0, -1, -3, -4, -5, -6, -8, -9,-10,-11,-13,-14,-15,-16,-18,-19,-20,-19,-17,-16,-15,-14,-12,-11,-10, -9, -7, -6, -5, -4, -2, -1,},
			   {   0,  1,  3,  4,  5,  7,  8,  9, 11, 12, 13, 14, 16, 17, 18, 20, 21, 20, 18, 17, 16, 14, 13, 12, 10,  9,  8,  7,  5,  4,  3,  1,  0, -1, -3, -4, -5, -7, -8, -9,-11,-12,-13,-14,-16,-17,-18,-20,-21,-20,-18,-17,-16,-14,-13,-12,-10, -9, -8, -7, -5, -4, -3, -1,},
			   {   0,  1,  3,  4,  6,  7,  8, 10, 11, 12, 14, 15, 17, 18, 19, 21, 22, 21, 19, 18, 16, 15, 14, 12, 11, 10,  8,  7,  5,  4,  3,  1,  0, -1, -3, -4, -6, -7, -8,-10,-11,-12,-14,-15,-17,-18,-19,-21,-22,-21,-19,-18,-16,-15,-14,-12,-11,-10, -8, -7, -5, -4, -3, -1,},
			   {   0,  1,  3,  4,  6,  7,  9, 10, 12, 13, 14, 16, 17, 19, 20, 22, 23, 22, 20, 19, 17, 16, 14, 13, 11, 10,  9,  7,  6,  4,  3,  1,  0, -1, -3, -4, -6, -7, -9,-10,-12,-13,-14,-16,-17,-19,-20,-22,-23,-22,-20,-19,-17,-16,-14,-13,-11,-10, -9, -7, -6, -4, -3, -1,},
			   {   0,  2,  3,  5,  6,  8,  9, 11, 12, 14, 15, 17, 18, 20, 21, 23, 24, 22, 21, 19, 18, 16, 15, 13, 12, 10,  9,  7,  6,  4,  3,  1,  0, -2, -3, -5, -6, -8, -9,-11,-12,-14,-15,-17,-18,-20,-21,-23,-24,-22,-21,-19,-18,-16,-15,-13,-12,-10, -9, -7, -6, -4, -3, -1,},
			   {   0,  2,  3,  5,  6,  8,  9, 11, 13, 14, 16, 17, 19, 20, 22, 23, 25, 23, 22, 20, 19, 17, 16, 14, 12, 11,  9,  8,  6,  5,  3,  2,  0, -2, -3, -5, -6, -8, -9,-11,-13,-14,-16,-17,-19,-20,-22,-23,-25,-23,-22,-20,-19,-17,-16,-14,-12,-11, -9, -8, -6, -5, -3, -2,},
			   {   0,  2,  3,  5,  7,  8, 10, 11, 13, 15, 16, 18, 20, 21, 23, 24, 26, 24, 23, 21, 19, 18, 16, 15, 13, 11, 10,  8,  6,  5,  3,  2,  0, -2, -3, -5, -7, -8,-10,-11,-13,-15,-16,-18,-20,-21,-23,-24,-26,-24,-23,-21,-19,-18,-16,-15,-13,-11,-10, -8, -6, -5, -3, -2,},
			   {   0,  2,  3,  5,  7,  8, 10, 12, 14, 15, 17, 19, 20, 22, 24, 25, 27, 25, 24, 22, 20, 19, 17, 15, 13, 12, 10,  8,  7,  5,  3,  2,  0, -2, -3, -5, -7, -8,-10,-12,-14,-15,-17,-19,-20,-22,-24,-25,-27,-25,-24,-22,-20,-19,-17,-15,-13,-12,-10, -8, -7, -5, -3, -2,},
			   {   0,  2,  4,  5,  7,  9, 11, 12, 14, 16, 18, 19, 21, 23, 25, 26, 28, 26, 24, 23, 21, 19, 17, 16, 14, 12, 10,  9,  7,  5,  3,  2,  0, -2, -4, -5, -7, -9,-11,-12,-14,-16,-18,-19,-21,-23,-25,-26,-28,-26,-24,-23,-21,-19,-17,-16,-14,-12,-10, -9, -7, -5, -3, -2,},
			   {   0,  2,  4,  5,  7,  9, 11, 13, 15, 16, 18, 20, 22, 24, 25, 27, 29, 27, 25, 24, 22, 20, 18, 16, 14, 13, 11,  9,  7,  5,  4,  2,  0, -2, -4, -5, -7, -9,-11,-13,-15,-16,-18,-20,-22,-24,-25,-27,-29,-27,-25,-24,-22,-20,-18,-16,-14,-13,-11, -9, -7, -5, -4, -2,},
			   {   0,  2,  4,  6,  8,  9, 11, 13, 15, 17, 19, 21, 23, 24, 26, 28, 30, 28, 26, 24, 22, 21, 19, 17, 15, 13, 11,  9,  7,  6,  4,  2,  0, -2, -4, -6, -8, -9,-11,-13,-15,-17,-19,-21,-23,-24,-26,-28,-30,-28,-26,-24,-22,-21,-19,-17,-15,-13,-11, -9, -7, -6, -4, -2,},
			   {   0,  2,  4,  6,  8, 10, 12, 14, 16, 17, 19, 21, 23, 25, 27, 29, 31, 29, 27, 25, 23, 21, 19, 17, 15, 14, 12, 10,  8,  6,  4,  2,  0, -2, -4, -6, -8,-10,-12,-14,-16,-17,-19,-21,-23,-25,-27,-29,-31,-29,-27,-25,-23,-21,-19,-17,-15,-14,-12,-10, -8, -6, -4, -2,},

	};
	int sawTbl[][] = {
			   {   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,},
			   {   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,},
			   {   0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2,  2,  2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0,  0,  0,  0,},
			   {   0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  3,  3,  3,  3,  3, -3, -3, -3, -3, -3, -3, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,  0,},
			   {   0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2,  2,  2,  3,  3,  3,  3,  3,  3,  3,  3,  4,  4,  4,  4, -4, -4, -4, -4, -3, -3, -3, -3, -3, -3, -3, -3, -2, -2, -2, -2, -2, -2, -2, -2, -1, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0,},
			   {   0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2,  3,  3,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  4,  5,  5,  5, -5, -5, -5, -5, -4, -4, -4, -4, -4, -4, -3, -3, -3, -3, -3, -3, -2, -2, -2, -2, -2, -2, -2, -1, -1, -1, -1, -1, -1,  0,  0,  0,},
			   {   0,  0,  0,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  5,  5,  5,  5,  5,  5,  6,  6, -6, -6, -6, -5, -5, -5, -5, -5, -4, -4, -4, -4, -4, -4, -3, -3, -3, -3, -3, -2, -2, -2, -2, -2, -1, -1, -1, -1, -1, -1,  0,  0,},
			   {   0,  0,  0,  1,  1,  1,  1,  2,  2,  2,  2,  2,  3,  3,  3,  3,  4,  4,  4,  4,  4,  5,  5,  5,  5,  5,  6,  6,  6,  6,  7,  7, -7, -7, -7, -6, -6, -6, -6, -5, -5, -5, -5, -5, -4, -4, -4, -4, -3, -3, -3, -3, -3, -2, -2, -2, -2, -2, -1, -1, -1, -1,  0,  0,},
			   {   0,  0,  1,  1,  1,  1,  2,  2,  2,  2,  3,  3,  3,  3,  4,  4,  4,  4,  5,  5,  5,  5,  6,  6,  6,  6,  7,  7,  7,  7,  8,  8, -8, -8, -7, -7, -7, -7, -6, -6, -6, -6, -5, -5, -5, -5, -4, -4, -4, -4, -3, -3, -3, -3, -2, -2, -2, -2, -1, -1, -1, -1,  0,  0,},
			   {   0,  0,  1,  1,  1,  1,  2,  2,  2,  3,  3,  3,  3,  4,  4,  4,  5,  5,  5,  5,  6,  6,  6,  6,  7,  7,  7,  8,  8,  8,  8,  9, -9, -9, -8, -8, -8, -8, -7, -7, -7, -6, -6, -6, -6, -5, -5, -5, -4, -4, -4, -4, -3, -3, -3, -3, -2, -2, -2, -1, -1, -1, -1,  0,},
			   {   0,  0,  1,  1,  1,  2,  2,  2,  3,  3,  3,  3,  4,  4,  4,  5,  5,  5,  6,  6,  6,  7,  7,  7,  8,  8,  8,  8,  9,  9,  9, 10,-10,-10, -9, -9, -9, -8, -8, -8, -7, -7, -7, -7, -6, -6, -6, -5, -5, -5, -4, -4, -4, -3, -3, -3, -2, -2, -2, -2, -1, -1, -1,  0,},
			   {   0,  0,  1,  1,  1,  2,  2,  2,  3,  3,  3,  4,  4,  4,  5,  5,  6,  6,  6,  7,  7,  7,  8,  8,  8,  9,  9,  9, 10, 10, 10, 11,-11,-11,-10,-10,-10, -9, -9, -9, -8, -8, -8, -7, -7, -7, -6, -6, -5, -5, -5, -4, -4, -4, -3, -3, -3, -2, -2, -2, -1, -1, -1,  0,},
			   {   0,  0,  1,  1,  2,  2,  2,  3,  3,  3,  4,  4,  5,  5,  5,  6,  6,  6,  7,  7,  8,  8,  8,  9,  9,  9, 10, 10, 11, 11, 11, 12,-12,-12,-11,-11,-10,-10,-10, -9, -9, -9, -8, -8, -7, -7, -7, -6, -6, -6, -5, -5, -4, -4, -4, -3, -3, -3, -2, -2, -1, -1, -1,  0,},
			   {   0,  0,  1,  1,  2,  2,  2,  3,  3,  4,  4,  4,  5,  5,  6,  6,  7,  7,  7,  8,  8,  9,  9,  9, 10, 10, 11, 11, 11, 12, 12, 13,-13,-13,-12,-12,-11,-11,-11,-10,-10, -9, -9, -9, -8, -8, -7, -7, -6, -6, -6, -5, -5, -4, -4, -4, -3, -3, -2, -2, -2, -1, -1,  0,},
			   {   0,  0,  1,  1,  2,  2,  3,  3,  4,  4,  4,  5,  5,  6,  6,  7,  7,  7,  8,  8,  9,  9, 10, 10, 11, 11, 11, 12, 12, 13, 13, 14,-14,-14,-13,-13,-12,-12,-11,-11,-10,-10,-10, -9, -9, -8, -8, -7, -7, -7, -6, -6, -5, -5, -4, -4, -3, -3, -3, -2, -2, -1, -1,  0,},
			   {   0,  0,  1,  1,  2,  2,  3,  3,  4,  4,  5,  5,  6,  6,  7,  7,  8,  8,  8,  9,  9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15,-15,-15,-14,-14,-13,-13,-12,-12,-11,-11,-10,-10, -9, -9, -8, -8, -7, -7, -7, -6, -6, -5, -5, -4, -4, -3, -3, -2, -2, -1, -1,  0,},
			   {   0,  1,  1,  2,  2,  3,  3,  4,  4,  5,  5,  6,  6,  7,  7,  8,  8,  9,  9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 16,-16,-15,-15,-14,-14,-13,-13,-12,-12,-11,-11,-10,-10, -9, -9, -8, -8, -7, -7, -6, -6, -5, -5, -4, -4, -3, -3, -2, -2, -1, -1,  0,},
			   {   0,  1,  1,  2,  2,  3,  3,  4,  4,  5,  5,  6,  6,  7,  7,  8,  9,  9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 16, 16,-17,-16,-16,-15,-15,-14,-14,-13,-13,-12,-12,-11,-11,-10,-10, -9, -8, -8, -7, -7, -6, -6, -5, -5, -4, -4, -3, -3, -2, -2, -1, -1,},
			   {   0,  1,  1,  2,  2,  3,  3,  4,  5,  5,  6,  6,  7,  7,  8,  8,  9, 10, 10, 11, 11, 12, 12, 13, 14, 14, 15, 15, 16, 16, 17, 17,-18,-17,-17,-16,-16,-15,-15,-14,-13,-13,-12,-12,-11,-11,-10,-10, -9, -8, -8, -7, -7, -6, -6, -5, -4, -4, -3, -3, -2, -2, -1, -1,},
			   {   0,  1,  1,  2,  2,  3,  4,  4,  5,  5,  6,  7,  7,  8,  8,  9, 10, 10, 11, 11, 12, 12, 13, 14, 14, 15, 15, 16, 17, 17, 18, 18,-19,-18,-18,-17,-17,-16,-15,-15,-14,-14,-13,-12,-12,-11,-11,-10, -9, -9, -8, -8, -7, -7, -6, -5, -5, -4, -4, -3, -2, -2, -1, -1,},
			   {   0,  1,  1,  2,  3,  3,  4,  4,  5,  6,  6,  7,  8,  8,  9,  9, 10, 11, 11, 12, 13, 13, 14, 14, 15, 16, 16, 17, 18, 18, 19, 19,-20,-19,-19,-18,-17,-17,-16,-16,-15,-14,-14,-13,-12,-12,-11,-11,-10, -9, -9, -8, -7, -7, -6, -6, -5, -4, -4, -3, -2, -2, -1, -1,},
			   {   0,  1,  1,  2,  3,  3,  4,  5,  5,  6,  7,  7,  8,  9,  9, 10, 11, 11, 12, 12, 13, 14, 14, 15, 16, 16, 17, 18, 18, 19, 20, 20,-21,-20,-20,-19,-18,-18,-17,-16,-16,-15,-14,-14,-13,-12,-12,-11,-10,-10, -9, -9, -8, -7, -7, -6, -5, -5, -4, -3, -3, -2, -1, -1,},
			   {   0,  1,  1,  2,  3,  3,  4,  5,  6,  6,  7,  8,  8,  9, 10, 10, 11, 12, 12, 13, 14, 14, 15, 16, 17, 17, 18, 19, 19, 20, 21, 21,-22,-21,-21,-20,-19,-19,-18,-17,-16,-16,-15,-14,-14,-13,-12,-12,-11,-10,-10, -9, -8, -8, -7, -6, -5, -5, -4, -3, -3, -2, -1, -1,},
			   {   0,  1,  1,  2,  3,  4,  4,  5,  6,  6,  7,  8,  9,  9, 10, 11, 12, 12, 13, 14, 14, 15, 16, 17, 17, 18, 19, 19, 20, 21, 22, 22,-23,-22,-22,-21,-20,-19,-19,-18,-17,-17,-16,-15,-14,-14,-13,-12,-11,-11,-10, -9, -9, -8, -7, -6, -6, -5, -4, -4, -3, -2, -1, -1,},
			   {   0,  1,  2,  2,  3,  4,  5,  5,  6,  7,  8,  8,  9, 10, 11, 11, 12, 13, 14, 14, 15, 16, 17, 17, 18, 19, 20, 20, 21, 22, 23, 23,-24,-23,-22,-22,-21,-20,-19,-19,-18,-17,-16,-16,-15,-14,-13,-13,-12,-11,-10,-10, -9, -8, -7, -7, -6, -5, -4, -4, -3, -2, -1, -1,},
			   {   0,  1,  2,  2,  3,  4,  5,  5,  6,  7,  8,  9,  9, 10, 11, 12, 13, 13, 14, 15, 16, 16, 17, 18, 19, 20, 20, 21, 22, 23, 23, 24,-25,-24,-23,-23,-22,-21,-20,-20,-19,-18,-17,-16,-16,-15,-14,-13,-12,-12,-11,-10, -9, -9, -8, -7, -6, -5, -5, -4, -3, -2, -2, -1,},
			   {   0,  1,  2,  2,  3,  4,  5,  6,  7,  7,  8,  9, 10, 11, 11, 12, 13, 14, 15, 15, 16, 17, 18, 19, 20, 20, 21, 22, 23, 24, 24, 25,-26,-25,-24,-24,-23,-22,-21,-20,-19,-19,-18,-17,-16,-15,-15,-14,-13,-12,-11,-11,-10, -9, -8, -7, -6, -6, -5, -4, -3, -2, -2, -1,},
			   {   0,  1,  2,  3,  3,  4,  5,  6,  7,  8,  8,  9, 10, 11, 12, 13, 14, 14, 15, 16, 17, 18, 19, 19, 20, 21, 22, 23, 24, 24, 25, 26,-27,-26,-25,-24,-24,-23,-22,-21,-20,-19,-19,-18,-17,-16,-15,-14,-13,-13,-12,-11,-10, -9, -8, -8, -7, -6, -5, -4, -3, -3, -2, -1,},
			   {   0,  1,  2,  3,  4,  4,  5,  6,  7,  8,  9, 10, 11, 11, 12, 13, 14, 15, 16, 17, 18, 18, 19, 20, 21, 22, 23, 24, 25, 25, 26, 27,-28,-27,-26,-25,-24,-24,-23,-22,-21,-20,-19,-18,-17,-17,-16,-15,-14,-13,-12,-11,-10,-10, -9, -8, -7, -6, -5, -4, -3, -3, -2, -1,},
			   {   0,  1,  2,  3,  4,  5,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 24, 25, 26, 27, 28,-29,-28,-27,-26,-25,-24,-24,-23,-22,-21,-20,-19,-18,-17,-16,-15,-14,-14,-13,-12,-11,-10, -9, -8, -7, -6, -5, -5, -4, -3, -2, -1,},
			   {   0,  1,  2,  3,  4,  5,  6,  7,  8,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 23, 24, 25, 26, 27, 28, 29,-30,-29,-28,-27,-26,-25,-24,-23,-22,-22,-21,-20,-19,-18,-17,-16,-15,-14,-13,-12,-11,-10, -9, -8, -7, -7, -6, -5, -4, -3, -2, -1,},
			   {   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30,-31,-30,-29,-28,-27,-26,-25,-24,-23,-22,-21,-20,-19,-18,-17,-16,-15,-15,-14,-13,-12,-11,-10, -9, -8, -7, -6, -5, -4, -3, -2, -1,},

	};
	int viewTbl[][] = sinTbl;


	@FXML Label waveNoLabel;
	@FXML Slider modulateRateSlider;
	@FXML Label  modulateRateLabel;

	@FXML Slider sinPitchSlider;
	@FXML Label	 sinPitchLabel;

	@FXML Slider sinDepthSlider;
	@FXML Label  sinDepthLabel;

	@FXML Slider modulationSlider;
	@FXML Label  modulationLabel;

	@FXML Slider delaySlider;
	@FXML Label  delayLabel;

	@FXML ComboBox<String> waveSelectComboBox;
	ObservableList<String> waveOptions;

	@FXML ComboBox<String> midichlistBox;
	ObservableList<String> channelOptions;
	@FXML Canvas canvas;

	@FXML Button reSend;


	@FXML void initialize(){
		toneData = Ymf825ToneData.getInstance();
		toneData.attach(this);

		channelOptions = FXCollections.observableArrayList();
		for(int i = 1;i<17;i++) {
			String target = ("CH" + i);
			channelOptions.add(target);
		}
		midichlistBox.setItems(channelOptions);
		midichlistBox.setValue(channelOptions.get(0));
		midichlistBox.setPromptText(channelOptions.get(0));
		midichlistBox.setStyle("-fx-font: 12px \"Serif\";");


		waveOptions = FXCollections.observableArrayList();
		waveOptions.add("waveImg/img0.png");
		waveOptions.add("waveImg/img16.png");
		waveOptions.add("waveImg/img24.png");


		waveSelectComboBox.setItems(waveOptions);
		waveSelectComboBox.setCellFactory(c->new StatusListCell());
		waveSelectComboBox.setButtonCell(new StatusListCell());
		waveSelectComboBox.setValue(waveOptions.get(0));

		modulateRateSlider.valueProperty().addListener((
	        	ObservableValue<? extends Number> ov,Number old_val,
	    		Number new_val) ->{
	    			changeModulateRate(new_val.intValue());
	    	});

		delaySlider.valueProperty().addListener((
	        	ObservableValue<? extends Number> ov,Number old_val,
	    		Number new_val) ->{
	    			changeDelay(new_val.intValue());
	    	});

		sinPitchSlider.valueProperty().addListener((
	        	ObservableValue<? extends Number> ov,Number old_val,
	    		Number new_val) ->{
	    			changeSinPitch(new_val.intValue());
	    	});

		sinDepthSlider.valueProperty().addListener((
	        	ObservableValue<? extends Number> ov,Number old_val,
	    		Number new_val) ->{
	    			changeSinDepth(new_val.intValue());
	    	});

		modulationSlider.valueProperty().addListener((
	        	ObservableValue<? extends Number> ov,Number old_val,
	    		Number new_val) ->{
	    			changeModulation(new_val.intValue());
	    	});

		g = canvas.getGraphicsContext2D();

	}

	@FXML private void reSendParameter() {
		toneData.SmodulationSeneAllParameter(midiChannelNo, sinPitch
				, sinDepth, waveNo, modulateRate, delayValue);

	}
	private void changeModulateRate(int i){
		modulateRateLabel.setText(i + "");
		modulateRate = i;
		toneData.changeSmodulateRate(midiChannelNo, modulateRate);
		rePaint();
	}

	private void changeDelay(int i) {
		delayLabel.setText(i + "");
		delayValue = i;
		toneData.changeSmodulateDelay(midiChannelNo, delayValue);
		rePaint();
	}

	private void changeSinPitch(int i) {
		sinPitchLabel.setText(i + "");
		sinPitch = i;
		toneData.changeSinPitch(midiChannelNo, sinPitch);
		rePaint();
	}

	private void changeSinDepth(int i) {

		sinDepthLabel.setText((i*2) + "");
		sinDepth = i;
		toneData.changeSinDepth(midiChannelNo, sinDepth * 2);
		rePaint();
	}

	private void changeModulation(int i) {
		modulationLabel.setText(i + "");
		modulation = i;

		toneData.changeSmodulation(midiChannelNo, modulation);
		rePaint();

	}



	@FXML void changeChannel(){
		byte [] buf = new byte[32];

		int ch = channelOptions.indexOf(midichlistBox.getValue());
		midiChannelNo =ch;

		midichlistBox.setPromptText(channelOptions.get(ch));


		//midichlistBox.setValue(channelOptions.get(ch));
		toneData.get_softwaremodulation_parameter(ch,buf);

		modulateRateSlider.setValue(buf[0]);
		sinPitchSlider.setValue(buf[2]);
		sinDepthSlider.setValue(buf[3]/2);
		modulationSlider.setValue(buf[1]);
		waveSelectComboBox.setValue(waveOptions.get(buf[4]));
		delaySlider.setValue(buf[5]/2);
		rePaint();
	}

	@FXML void changeModulationWave() {
		waveNo = waveOptions.indexOf(waveSelectComboBox.getValue());
		toneData.changeSmodulationWaveTable(midiChannelNo, waveNo);
		changeTable(waveNo);

		rePaint();
	}






	@FXML
	void onCloseAction(ActionEvent event) {
		Scene scene = ((Node) event.getSource()).getScene();
		Window window = scene.getWindow();
		window.hide();
	//	Platform.exit();
	}


	void line(GraphicsContext g ,int sx,int sy, int ex, int ey){
		double scale = 0.5;
		//Graphics g = super.getGraphics();
		g.strokeLine((int)(sx*scale)+25, sy+94, (int)(ex*scale)+25, ey+94);
	}


	private void changeTable(int i){
System.out.println("i");
		int no = -1;
		switch(i){

		case 0:
			viewTbl = sinTbl;
			no = 0;
			break;
		case 1:
			viewTbl = triTbl;
			no = 1;
			break;
		case 2:
			viewTbl = sawTbl;
			no = 2;
			break;
		default:
			break;
		}
		if(no >= 0) {
			waveNoLabel.setText(no + "");
		}


	}


	private void drawLine(){

		//Color col = Color.DARKGRAY;


		line(g,0,0,800,0);



		int scaleX = 11;
		int scaleY = 3;
		int sx = 0;
		int sy = 0;
		int x;
		int y;

		int b;
		int c;
		int d;
		for(int i = 0; i < 65;i++){
			x = i * scaleX;

			 b = (sinPitch * i) % 64;

			 c = (viewTbl[sinDepth][b]);

			 d = (c + i+64 ) % 64;

			 y = viewTbl[modulation][d] * scaleY;
			 line(g,sx,sy,x,y);
			 sx = x;
			 sy = y;



		}
	}

private void rePaint() {
	g.clearRect(0, 0, 418, 200);
	drawLine();

}





	@Override
	public void update(EventType<MyDataEvent> e, eventSource source, int ch, int op, int val) {
		// TODO 自動生成されたメソッド・スタブ

	}
}